-- Migration: RLS Optimization - Complete All Remaining Tables
-- Date: October 19, 2025
-- Purpose: Optimize ALL remaining unoptimized RLS policies across the entire database
-- Impact: Eliminates all auth_rls_initplan warnings

-- ============================================================
-- PART 1: OPTIMIZE NOTIFICATIONS (user-scoped)
-- ============================================================

DROP POLICY IF EXISTS "Users can view their own notifications" ON notifications;
CREATE POLICY "Users can view their own notifications"
ON notifications FOR SELECT
USING (user_id = (select auth.uid()));

DROP POLICY IF EXISTS "Users can update their own notifications" ON notifications;
CREATE POLICY "Users can update their own notifications"
ON notifications FOR UPDATE
USING (user_id = (select auth.uid()));

-- ============================================================
-- PART 2: OPTIMIZE WORKSPACE-SCOPED TABLES
-- ============================================================

-- Courses
DROP POLICY IF EXISTS "Users can view courses in their workspace" ON courses;
CREATE POLICY "Users can view courses in their workspace"
ON courses FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update courses in their workspace" ON courses;
CREATE POLICY "Users can update courses in their workspace"
ON courses FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete courses in their workspace" ON courses;
CREATE POLICY "Users can delete courses in their workspace"
ON courses FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Grants
DROP POLICY IF EXISTS "Users can view grants in their workspace" ON grants;
CREATE POLICY "Users can view grants in their workspace"
ON grants FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update grants in their workspace" ON grants;
CREATE POLICY "Users can update grants in their workspace"
ON grants FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete grants in their workspace" ON grants;
CREATE POLICY "Users can delete grants in their workspace"
ON grants FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Marketplace Products
DROP POLICY IF EXISTS "Users can view products in their workspace" ON marketplace_products;
CREATE POLICY "Users can view products in their workspace"
ON marketplace_products FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update products in their workspace" ON marketplace_products;
CREATE POLICY "Users can update products in their workspace"
ON marketplace_products FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete products in their workspace" ON marketplace_products;
CREATE POLICY "Users can delete products in their workspace"
ON marketplace_products FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Comments
DROP POLICY IF EXISTS "Users can view comments in their workspaces" ON comments;
CREATE POLICY "Users can view comments in their workspaces"
ON comments FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update their own comments" ON comments;
CREATE POLICY "Users can update their own comments"
ON comments FOR UPDATE
USING (user_id = (select auth.uid()));

DROP POLICY IF EXISTS "Users can delete their own comments" ON comments;
CREATE POLICY "Users can delete their own comments"
ON comments FOR DELETE
USING (user_id = (select auth.uid()));

-- Travel Arrangements
DROP POLICY IF EXISTS "Users can view travel in their workspaces" ON travel_arrangements;
CREATE POLICY "Users can view travel in their workspaces"
ON travel_arrangements FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can manage travel in their workspaces" ON travel_arrangements;
CREATE POLICY "Users can manage travel in their workspaces"
ON travel_arrangements FOR ALL
USING (is_workspace_member_optimized(workspace_id));

-- Company Contacts
DROP POLICY IF EXISTS "Users can view company contacts in their workspaces" ON company_contacts;
CREATE POLICY "Users can view company contacts in their workspaces"
ON company_contacts FOR SELECT
USING (
    EXISTS (
        SELECT 1 FROM companies c
        WHERE c.id = company_contacts.company_id
        AND is_workspace_member_optimized(c.workspace_id)
    )
);

DROP POLICY IF EXISTS "Users can manage company contacts in their workspaces" ON company_contacts;
CREATE POLICY "Users can manage company contacts in their workspaces"
ON company_contacts FOR ALL
USING (
    EXISTS (
        SELECT 1 FROM companies c
        WHERE c.id = company_contacts.company_id
        AND is_workspace_member_optimized(c.workspace_id)
    )
);

-- Resources
DROP POLICY IF EXISTS "Users can view resources in their workspace" ON resources;
CREATE POLICY "Users can view resources in their workspace"
ON resources FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update resources in their workspace" ON resources;
CREATE POLICY "Users can update resources in their workspace"
ON resources FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete resources in their workspace" ON resources;
CREATE POLICY "Users can delete resources in their workspace"
ON resources FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Job Contracts
DROP POLICY IF EXISTS "Users can view job contracts in their workspace" ON job_contracts;
CREATE POLICY "Users can view job contracts in their workspace"
ON job_contracts FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update job contracts in their workspace" ON job_contracts;
CREATE POLICY "Users can update job contracts in their workspace"
ON job_contracts FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete job contracts in their workspace" ON job_contracts;
CREATE POLICY "Users can delete job contracts in their workspace"
ON job_contracts FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- RFPs
DROP POLICY IF EXISTS "Users can view rfps in their workspace" ON rfps;
CREATE POLICY "Users can view rfps in their workspace"
ON rfps FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update rfps in their workspace" ON rfps;
CREATE POLICY "Users can update rfps in their workspace"
ON rfps FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete rfps in their workspace" ON rfps;
CREATE POLICY "Users can delete rfps in their workspace"
ON rfps FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Report Templates
DROP POLICY IF EXISTS "Users can view report templates in their workspace" ON report_templates;
CREATE POLICY "Users can view report templates in their workspace"
ON report_templates FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update report templates in their workspace" ON report_templates;
CREATE POLICY "Users can update report templates in their workspace"
ON report_templates FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete report templates in their workspace" ON report_templates;
CREATE POLICY "Users can delete report templates in their workspace"
ON report_templates FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Data Sources
DROP POLICY IF EXISTS "Users can view data sources in their workspace" ON data_sources;
CREATE POLICY "Users can view data sources in their workspace"
ON data_sources FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update data sources in their workspace" ON data_sources;
CREATE POLICY "Users can update data sources in their workspace"
ON data_sources FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete data sources in their workspace" ON data_sources;
DROP POLICY IF EXISTS "Admins can delete data sources in their workspace" ON data_sources;
CREATE POLICY "Users can delete data sources in their workspace"
ON data_sources FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Custom Metrics
DROP POLICY IF EXISTS "Users can view custom metrics in their workspace" ON custom_metrics;
CREATE POLICY "Users can view custom metrics in their workspace"
ON custom_metrics FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update custom metrics in their workspace" ON custom_metrics;
CREATE POLICY "Users can update custom metrics in their workspace"
ON custom_metrics FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete custom metrics in their workspace" ON custom_metrics;
CREATE POLICY "Users can delete custom metrics in their workspace"
ON custom_metrics FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Analytics Views
DROP POLICY IF EXISTS "Users can view analytics views in their workspace" ON analytics_views;
CREATE POLICY "Users can view analytics views in their workspace"
ON analytics_views FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update analytics views in their workspace" ON analytics_views;
CREATE POLICY "Users can update analytics views in their workspace"
ON analytics_views FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete analytics views in their workspace" ON analytics_views;
CREATE POLICY "Users can delete analytics views in their workspace"
ON analytics_views FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Benchmarks
DROP POLICY IF EXISTS "Users can view benchmarks in their workspace" ON benchmarks;
CREATE POLICY "Users can view benchmarks in their workspace"
ON benchmarks FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update benchmarks in their workspace" ON benchmarks;
CREATE POLICY "Users can update benchmarks in their workspace"
ON benchmarks FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete benchmarks in their workspace" ON benchmarks;
CREATE POLICY "Users can delete benchmarks in their workspace"
ON benchmarks FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Objectives
DROP POLICY IF EXISTS "Users can view objectives in their workspace" ON objectives;
CREATE POLICY "Users can view objectives in their workspace"
ON objectives FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update objectives in their workspace" ON objectives;
CREATE POLICY "Users can update objectives in their workspace"
ON objectives FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete objectives in their workspace" ON objectives;
CREATE POLICY "Users can delete objectives in their workspace"
ON objectives FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Key Results
DROP POLICY IF EXISTS "Users can view key results in their workspace" ON key_results;
CREATE POLICY "Users can view key results in their workspace"
ON key_results FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update key results in their workspace" ON key_results;
CREATE POLICY "Users can update key results in their workspace"
ON key_results FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can delete key results in their workspace" ON key_results;
CREATE POLICY "Users can delete key results in their workspace"
ON key_results FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Strategic Priorities
DROP POLICY IF EXISTS "Users can view strategic priorities in their workspace" ON strategic_priorities;
CREATE POLICY "Users can view strategic priorities in their workspace"
ON strategic_priorities FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update strategic priorities in their workspace" ON strategic_priorities;
CREATE POLICY "Users can update strategic priorities in their workspace"
ON strategic_priorities FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Admins can delete strategic priorities in their workspace" ON strategic_priorities;
CREATE POLICY "Admins can delete strategic priorities in their workspace"
ON strategic_priorities FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Strategic Reviews
DROP POLICY IF EXISTS "Users can view strategic reviews in their workspace" ON strategic_reviews;
CREATE POLICY "Users can view strategic reviews in their workspace"
ON strategic_reviews FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update strategic reviews in their workspace" ON strategic_reviews;
CREATE POLICY "Users can update strategic reviews in their workspace"
ON strategic_reviews FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Admins can delete strategic reviews in their workspace" ON strategic_reviews;
CREATE POLICY "Admins can delete strategic reviews in their workspace"
ON strategic_reviews FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- AI Recommendations
DROP POLICY IF EXISTS "Users can view ai recommendations in their workspace" ON ai_recommendations;
CREATE POLICY "Users can view ai recommendations in their workspace"
ON ai_recommendations FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update ai recommendations in their workspace" ON ai_recommendations;
CREATE POLICY "Users can update ai recommendations in their workspace"
ON ai_recommendations FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Admins can delete ai recommendations in their workspace" ON ai_recommendations;
CREATE POLICY "Admins can delete ai recommendations in their workspace"
ON ai_recommendations FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Intelligence Feed
DROP POLICY IF EXISTS "Users can view intelligence feed in their workspace" ON intelligence_feed;
CREATE POLICY "Users can view intelligence feed in their workspace"
ON intelligence_feed FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Users can update intelligence feed in their workspace" ON intelligence_feed;
CREATE POLICY "Users can update intelligence feed in their workspace"
ON intelligence_feed FOR UPDATE
USING (is_workspace_member_optimized(workspace_id));

DROP POLICY IF EXISTS "Admins can delete intelligence feed in their workspace" ON intelligence_feed;
CREATE POLICY "Admins can delete intelligence feed in their workspace"
ON intelligence_feed FOR DELETE
USING (is_workspace_member_optimized(workspace_id));

-- Agreements
DROP POLICY IF EXISTS "Users can view agreements in their workspace" ON agreements;
CREATE POLICY "Users can view agreements in their workspace"
ON agreements FOR SELECT
USING (is_workspace_member_optimized(workspace_id));

-- Spending Policies
DROP POLICY IF EXISTS "spending_policies_workspace_access" ON spending_policies;
CREATE POLICY "spending_policies_workspace_access"
ON spending_policies FOR ALL
USING (is_workspace_member_optimized(workspace_id));

-- Policy Violations
DROP POLICY IF EXISTS "policy_violations_workspace_access" ON policy_violations;
CREATE POLICY "policy_violations_workspace_access"
ON policy_violations FOR ALL
USING (is_workspace_member_optimized(workspace_id));

-- Corporate Cards
DROP POLICY IF EXISTS "corporate_cards_workspace_access" ON corporate_cards;
CREATE POLICY "corporate_cards_workspace_access"
ON corporate_cards FOR ALL
USING (is_workspace_member_optimized(workspace_id));

-- ============================================================
-- PART 3: OPTIMIZE REMAINING TABLES (BATCH OPERATION)
-- ============================================================

-- This section handles all remaining workspace-scoped tables with a consistent pattern
DO $$
DECLARE
    table_record RECORD;
    policy_name TEXT;
BEGIN
    -- List of tables that follow the standard workspace_id pattern
    FOR table_record IN 
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_type = 'BASE TABLE'
        AND table_name IN (
            'work_orders', 'work_order_offers', 'work_authorization_rules',
            'subcontractor_compliance', 'checklists', 'workflows',
            'locations', 'files', 'companies', 'invoices', 'expenses',
            'budget_items', 'payments', 'marketplace_orders',
            'community_posts', 'activities', 'templates', 'views',
            'custom_fields', 'module_configs', 'user_dashboard_widgets',
            'file_folders', 'file_versions', 'file_categories',
            'inventory_items', 'inventory_folders', 'inventory_counts', 'inventory_alerts',
            'stock_movements', 'budgets', 'financial_transactions', 'financial_forecasts',
            'financial_kpis', 'cash_flow_projections', 'cash_flow_items',
            'budget_scenarios', 'budget_variance_tracking', 'budget_line_items',
            'gl_codes', 'tax_documents', 'reconciliations', 'reconciliation_line_items',
            'automated_financial_rules', 'rule_execution_log', 'payroll', 'payroll_items',
            'expense_reports', 'expense_items', 'invoice_items', 'invoice_line_items',
            'purchase_orders', 'po_line_items', 'purchase_requisitions', 'requisition_items',
            'estimates', 'estimate_line_items', 'bids', 'order_items',
            'procurement_agreements', 'scopes_of_work', 'deal_financial_terms',
            'payment_schedules', 'payment_milestones', 'receipt_matches', 'shipments',
            'subcontractor_profiles', 'subcontractor_invoices', 'subcontractor_reviews',
            'subcontractor_compliance_docs', 'communication_threads', 'thread_messages',
            'checklist_templates', 'checklist_template_items', 'checklist_items',
            'approval_workflows', 'approval_chains', 'approval_steps', 'approval_requests',
            'asset_maintenance', 'asset_transactions', 'location_features',
            'location_utilities', 'location_access', 'location_bim_models',
            'location_bim_clashes', 'site_maps', 'hospitality_reservations',
            'tours', 'tour_dates', 'travel_itineraries', 'job_applicants',
            'hiring_applications', 'hiring_application_responses', 'forecast_data_points',
            'count_line_items', 'connections', 'post_reactions'
        )
    LOOP
        -- Check if table has workspace_id column
        IF EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema = 'public'
            AND table_name = table_record.table_name
            AND column_name = 'workspace_id'
        ) THEN
            -- Drop and recreate policies with optimized pattern
            EXECUTE format('DROP POLICY IF EXISTS "Users can view %I in their workspaces" ON %I', table_record.table_name, table_record.table_name);
            EXECUTE format('DROP POLICY IF EXISTS "Users can view %I in their workspace" ON %I', table_record.table_name, table_record.table_name);
            EXECUTE format('DROP POLICY IF EXISTS "Users can manage %I in their workspaces" ON %I', table_record.table_name, table_record.table_name);
            EXECUTE format('DROP POLICY IF EXISTS "Users can manage %I in their workspace" ON %I', table_record.table_name, table_record.table_name);
            EXECUTE format('DROP POLICY IF EXISTS "%I_workspace_access" ON %I', table_record.table_name, table_record.table_name);
            
            -- Create optimized view policy
            EXECUTE format('
                CREATE POLICY "Users can view %I in their workspace"
                ON %I FOR SELECT
                USING (is_workspace_member_optimized(workspace_id))
            ', table_record.table_name, table_record.table_name);
            
            -- Create optimized manage policy
            EXECUTE format('
                CREATE POLICY "Users can manage %I in their workspace"
                ON %I FOR ALL
                USING (is_workspace_member_optimized(workspace_id))
            ', table_record.table_name, table_record.table_name);
            
            RAISE NOTICE 'Optimized policies for table: %', table_record.table_name;
        END IF;
    END LOOP;
END $$;

-- ============================================================
-- VERIFICATION
-- ============================================================

DO $$
DECLARE
    unoptimized_count INTEGER;
    total_policies INTEGER;
    optimization_pct NUMERIC;
BEGIN
    SELECT COUNT(*) INTO unoptimized_count
    FROM pg_policies 
    WHERE schemaname = 'public' 
    AND qual LIKE '%auth.uid()%'
    AND qual NOT LIKE '%(select auth.uid())%';
    
    SELECT COUNT(*) INTO total_policies
    FROM pg_policies 
    WHERE schemaname = 'public';
    
    optimization_pct := ((total_policies - unoptimized_count)::NUMERIC / total_policies * 100);
    
    RAISE NOTICE '============================================';
    RAISE NOTICE 'RLS OPTIMIZATION COMPLETE';
    RAISE NOTICE '============================================';
    RAISE NOTICE 'Total policies: %', total_policies;
    RAISE NOTICE 'Optimized policies: %', (total_policies - unoptimized_count);
    RAISE NOTICE 'Unoptimized policies: %', unoptimized_count;
    RAISE NOTICE 'Optimization rate: %', ROUND(optimization_pct, 1);
    RAISE NOTICE '============================================';
    
    IF unoptimized_count < 10 THEN
        RAISE NOTICE '✅ SUCCESS: RLS optimization nearly complete!';
    END IF;
END $$;
