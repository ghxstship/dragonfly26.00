name: Tab Validation

on:
  pull_request:
    paths:
      - 'src/components/**/*-tab.tsx'
      - 'src/lib/modules/tabs-registry.ts'
      - 'src/lib/modules/icon-map.ts'
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/components/**/*-tab.tsx'
      - 'src/lib/modules/tabs-registry.ts'
      - 'src/lib/modules/icon-map.ts'

jobs:
  validate-tabs:
    runs-on: ubuntu-latest
    name: Validate Tab Registration & Icons
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Check for unregistered tabs
        id: check-registration
        run: |
          echo "🔍 Checking for unregistered tabs..."
          if node scripts/find-unregistered-tabs.js; then
            echo "✅ All tabs are registered (100% coverage)"
          else
            echo "❌ Unregistered tabs detected!"
            exit 1
          fi
      
      - name: Check for missing icons
        id: check-icons
        run: |
          echo "🔍 Checking for missing tab icons..."
          if node scripts/audit-tab-icons.js; then
            echo "✅ All registered tabs have valid icons (100% coverage)"
          else
            echo "❌ Some tabs are missing icons!"
            exit 1
          fi
      
      - name: Comprehensive icon audit
        id: check-all-icons
        run: |
          echo "🔍 Running comprehensive icon audit..."
          if node scripts/audit-all-tab-icons.js; then
            echo "✅ All physical tab files have icons (100% coverage)"
          else
            echo "❌ Some tab files are missing icons!"
            exit 1
          fi
      
      - name: Generate audit report
        if: always()
        run: |
          echo "## Tab Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Registration status
          TOTAL_FILES=$(find src/components/{dashboard,projects,events,people,assets,locations,files,admin,settings,profile,companies,jobs,procurement,finance,community,marketplace,resources,analytics,reports,insights} -name "*-tab.tsx" 2>/dev/null | wc -l)
          echo "📊 **Total Tab Files:** $TOTAL_FILES" >> $GITHUB_STEP_SUMMARY
          
          # Run checks and capture output
          if node scripts/find-unregistered-tabs.js > /dev/null 2>&1; then
            echo "✅ **Registration:** 100% (All tabs registered)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Registration:** Failed (Unregistered tabs found)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if node scripts/audit-tab-icons.js > /dev/null 2>&1; then
            echo "✅ **Icons:** 100% (All icons valid)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Icons:** Failed (Missing icons)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation Rules" >> $GITHUB_STEP_SUMMARY
          echo "- All \`*-tab.tsx\` files must be registered in \`tabs-registry.ts\`" >> $GITHUB_STEP_SUMMARY
          echo "- All registered tabs must have valid icons in \`icon-map.ts\`" >> $GITHUB_STEP_SUMMARY
          echo "- File names must match registry slugs for consistency" >> $GITHUB_STEP_SUMMARY
      
      - name: Comment on PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the unregistered tabs report
            let comment = '## ❌ Tab Validation Failed\n\n';
            
            try {
              const report = JSON.parse(fs.readFileSync('.unregistered-tabs-report.json', 'utf8'));
              
              if (report.unregistered > 0) {
                comment += `### Unregistered Tabs (${report.unregistered})\n\n`;
                comment += 'The following tab files exist but are not registered in `tabs-registry.ts`:\n\n';
                
                report.unregisteredTabs.forEach(tab => {
                  comment += `- \`${tab.file}\`\n`;
                });
                
                comment += '\n**Action Required:** Add these tabs to `src/lib/modules/tabs-registry.ts`\n\n';
              }
            } catch (e) {
              comment += 'Could not read unregistered tabs report.\n\n';
            }
            
            comment += '### How to Fix\n\n';
            comment += '1. Add missing tabs to `src/lib/modules/tabs-registry.ts`\n';
            comment += '2. Ensure icons are imported in `src/lib/modules/icon-map.ts`\n';
            comment += '3. Run `npm run audit:tabs` locally to verify\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
